
#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: EmptyStar

# A short description of this BO3 object
Description: No description given

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: false

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 1

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 100.0

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: false

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: randomY

# The offset from the spawn height to spawn this BO3
# Ex. SpawnHeight = highestSolidBlock, SpawnHeightOffset = 3; This object will spawn 3 blocks above the highest solid block
SpawnHeightOffset: 0

# A random amount to offset the spawn location from the spawn offset height
# Ex. SpawnHeightOffset = 3, SpawnHeightVariance = 3; This object will spawn 3 to 6 blocks above the original spot it would have spawned
SpawnHeightVariance: 0

######################
# Extrusion settings #
######################

# The style of extrusion you wish to use - BottomDown, TopUp, None (Default)
ExtrudeMode: None

# The blocks to extrude your BO3 through
ExtrudeThroughBlocks: AIR

# The height limits for the BO3.
MinHeight: 0

MaxHeight: 255

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 1024

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block(s) the BO3 should spawn in.
SourceBlocks: All

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 110

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: placeAnyway


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
#   BlockCheck(0,-1,0,GRASS,DIRT)  Require grass or dirt just below the object
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,-1,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object

##BlockCheck(-40,-12,-32,AIR)
##BlockCheck(-40,-8,-32,AIR)
##BlockCheck(-40,-4,-32,AIR)
##BlockCheck(-40,0,-32,AIR)
##BlockCheck(-40,4,-32,AIR)
##BlockCheck(-40,8,-32,AIR)
##BlockCheck(-40,12,-32,AIR)

##BlockCheck(-24,-12,-32,AIR)
##BlockCheck(-24,-8,-32,AIR)
##BlockCheck(-24,-4,-32,AIR)
##BlockCheck(-24,0,-32,AIR)
##BlockCheck(-24,4,-32,AIR)
##BlockCheck(-24,8,-32,AIR)
##BlockCheck(-24,12,-32,AIR)

##BlockCheck(-8,-12,-32,AIR)
##BlockCheck(-8,-8,-32,AIR)
##BlockCheck(-8,-4,-32,AIR)
##BlockCheck(-8,0,-32,AIR)
##BlockCheck(-8,4,-32,AIR)
##BlockCheck(-8,8,-32,AIR)
##BlockCheck(-8,12,-32,AIR)

##BlockCheck(0,-12,-32,AIR)
##BlockCheck(0,-8,-32,AIR)
##BlockCheck(0,-4,-32,AIR)
##BlockCheck(0,0,-32,AIR)
##BlockCheck(0,4,-32,AIR)
##BlockCheck(0,8,-32,AIR)
##BlockCheck(0,12,-32,AIR)

##BlockCheck(-24,-12,32,AIR)
##BlockCheck(-24,-8,32,AIR)
##BlockCheck(-24,-4,32,AIR)
##BlockCheck(-24,0,32,AIR)
##BlockCheck(-24,4,32,AIR)
##BlockCheck(-24,8,32,AIR)
##BlockCheck(-24,12,32,AIR)

##BlockCheck(0,-12,0,AIR)
##BlockCheck(0,-8,0,AIR)
##BlockCheck(0,-4,0,AIR)
##BlockCheck(0,0,0,AIR)
##BlockCheck(0,4,0,AIR)
##BlockCheck(0,8,0,AIR)
##BlockCheck(0,12,0,AIR)

##BlockCheck(24,-12,-32,AIR)
##BlockCheck(24,-8,-32,AIR)
##BlockCheck(24,-4,-32,AIR)
##BlockCheck(24,0,-32,AIR)
##BlockCheck(24,4,-32,AIR)
##BlockCheck(24,8,-32,AIR)
##BlockCheck(24,12,-32,AIR)

##BlockCheck(24,-12,32,AIR)
##BlockCheck(24,-8,32,AIR)
##BlockCheck(24,-4,32,AIR)
##BlockCheck(24,0,32,AIR)
##BlockCheck(24,4,32,AIR)
##BlockCheck(24,8,32,AIR)
##BlockCheck(24,12,32,AIR)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank

# 0 1 2 3
# 4 5 6 7
# 8 9 A B
# C D E F

# C 0 4 8 1 2 5 6 9 A D E 7 B 3 F

WeightedBranch(-31,0,-24,corner_1,WEST,10,corner_2,WEST,20,corner_3,WEST,20,corner_4,WEST,20,corner_5,WEST,20,corner_6,WEST,10,100)
WeightedBranch(-15,0,-23,corner_1,NORTH,10,corner_2,NORTH,20,corner_3,NORTH,20,corner_4,NORTH,20,corner_5,NORTH,20,corner_6,NORTH,10,100)
WeightedBranch(17,0,9,corner_1,NORTH,10,corner_2,NORTH,20,corner_3,NORTH,20,corner_4,NORTH,20,corner_5,NORTH,20,corner_6,NORTH,10,100)
WeightedBranch(1,0,8,edge_1,WEST,30,edge_2,WEST,30,edge_3,WEST,30,edge_4,WEST,10,100)
WeightedBranch(-15,0,-7,edge_1,NORTH,30,edge_2,NORTH,30,edge_3,NORTH,30,edge_4,NORTH,10,100)
WeightedBranch(-15,0,8,landmass_corner_1,WEST,34,landmass_corner_2,WEST,33,landmass_corner_3,WEST,33,100)
WeightedBranch(-32,0,-8,edge_1,SOUTH,30,edge_2,SOUTH,30,edge_3,SOUTH,30,edge_4,SOUTH,10,100)
WeightedBranch(-32,0,8,edge_1,SOUTH,30,edge_2,SOUTH,30,edge_3,SOUTH,30,edge_4,SOUTH,10,100)
WeightedBranch(0,0,25,edge_1,EAST,30,edge_2,EAST,30,edge_3,EAST,30,edge_4,EAST,10,100)
WeightedBranch(-16,0,25,edge_1,EAST,30,edge_2,EAST,30,edge_3,EAST,30,edge_4,EAST,10,100)
WeightedBranch(16,0,25,corner_1,EAST,10,corner_2,EAST,20,corner_3,EAST,20,corner_4,EAST,20,corner_5,EAST,20,corner_6,EAST,10,100)
WeightedBranch(-32,0,24,corner_1,SOUTH,10,corner_2,SOUTH,20,corner_3,SOUTH,20,corner_4,SOUTH,20,corner_5,SOUTH,20,corner_6,SOUTH,10,100)
